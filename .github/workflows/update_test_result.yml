name: Generate Test Result and Update HTML

on:
  workflow_dispatch:

  # Add the cron job trigger to run every 30 minutes
  schedule:
    - cron: "*/30 * * * *"

jobs:
  generate_test_result:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set Environment Variables
        run: |
          # Generate random test result (Passed or Failed)
          RESULT=$(shuf -n 1 -e "Passed" "Failed")
          echo "Generated Test Result: $RESULT"

          # Determine the class attribute based on the test result
          if [ "$RESULT" = "Passed" ]; then
            CLASS_ATTRIBUTE="class=\"passed\""
          else
            CLASS_ATTRIBUTE="class=\"failed\""
          fi
          echo "Class Attribute: $CLASS_ATTRIBUTE"

          # Generate the workflow run link based on the GITHUB_RUN_ID
          WORKFLOW_RUN_ID=$(echo "$GITHUB_RUN_ID" | cut -c 1-7) # Taking the first 7 characters for brevity
          GITHUB_ACTIONS_LINK="https://github.com/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
          echo "Workflow Run Link: $GITHUB_ACTIONS_LINK"

          # Create the new table row with the dynamic href
          NEW_RESULT="\n<tr><td>$(date +'%Y-%m-%d %H:%M:%S')</td><td>Regression</td><td $CLASS_ATTRIBUTE>$RESULT</td><td></td><td></td><td></td><td></td><td><a href=\"$GITHUB_ACTIONS_LINK\">Test run</a></td></tr>"
          echo "New Table Row: $NEW_RESULT"

          # Replace the table body content in the HTML file with the new table row
          sed -i "s|<tbody>|<tbody>$NEW_RESULT|" html_content/boards_api_test_all.html

          # Display the updated HTML content for verification (optional)
          cat html_content/boards_api_test_all.html

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"

      # Commit changes to a temporary branch
      - name: Commit Changes
        run: |
          git add html_content/boards_api_test_all.html
          git diff-index --quiet HEAD || git commit -m "Update test result"
          echo "Changes Committed"

      # Push changes to main branch
      - name: Push Changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: main

      - name: Trigger Deploy Test Results
        if: ${{ success() }} # Only trigger if the previous steps were successful
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          event-type: deploy_test_results
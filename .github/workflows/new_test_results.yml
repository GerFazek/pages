name: Deploy static content and update test result to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      generate_test_result:
        description: 'Generate random test result'
        required: true
        default: 'Passed'
        options:
          - 'Passed'
          - 'Failed'

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy_and_update_test_result:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # Add your other build or setup steps here, if any...

      # Generate the test result based on user input (manual trigger)
      - name: Generate Test Result
        id: generate_result
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          RESULT="${{ github.event.inputs.generate_test_result }}"
          echo "::set-output name=result::$RESULT"

      # Create the /html_content directory if it doesn't exist
      - name: Create /html_content directory
        run: mkdir -p html_content

      # Update the HTML file with the new test result
      - name: Update HTML File
        run: |
          RESULT="${{ steps.generate_result.outputs.result }}"
          NEW_RESULT="<tr><td>$(date +'%Y-%m-%d %H:%M:%S')</td><td>Regression</td><td class=\"$RESULT\">$RESULT</td><td><a href=\"https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}\">Link to GitHub Actions</a></td></tr>"
          sed -i "s|<table>|<table><tbody>$NEW_RESULT|" html_content/boards_api_test_all.html
          git config user.name "GitHub Actions"
          git config user.email "actions@users.noreply.github.com"
          git add html_content/boards_api_test_all.html
          git commit -m "Update test result"
          git push --set-upstream origin ${{ github.ref }}
        env:
          GITHUB_TOKEN: ${{ secrets.UPDATE_HTML_CONTENT }}

      - name: Setup Pages
        uses: actions/configure-pages@v3

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v2
        with:
          # Upload entire repository
          path: '.'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
